name: Ollama with Cloudflared Tunnel

on:
  workflow_dispatch: # run manually
  push:
    branches:
      - main

jobs:
  run-ollama:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Ollama
      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          # Stop default Ollama service (running on 11434)
          sudo systemctl stop ollama || true
          sudo systemctl disable ollama || true
          pkill -9 ollama || true
          # Start Ollama on custom port 11500
          export OLLAMA_HOST=0.0.0.0:11500
          nohup ollama serve > ollama.log 2>&1 &
          sleep 10

      # Pull Qwen3 model (using custom host)
      - name: Pull Qwen3 model
        run: |
          export OLLAMA_HOST=0.0.0.0:11500
          ollama pull qwen3:0.6b

      # Run test prompt (using custom host)
      - name: Test Ollama prompt
        run: |
          export OLLAMA_HOST=0.0.0.0:11500
          ollama run qwen3:0.6b "hey there how are you"

      # Install cloudflared
      - name: Install Cloudflared
        run: |
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      # Start Cloudflared tunnel (to port 11500)
      - name: Start Cloudflared Tunnel
        run: |
          nohup cloudflared tunnel --url http://0.0.0.0:11500 > cloudflared.log 2>&1 &
          sleep 10
          echo "Tunnel URL:"
          grep -o 'https://.*trycloudflare.com' cloudflared.log | head -n 1 | tee tunnel_url.txt
          echo "Try API endpoint: $(cat tunnel_url.txt)/api/tags"
          echo "Try API generate: $(cat tunnel_url.txt)/api/generate"

      # Keep job alive for 10 minutes
      - name: Keep alive for 10 minutes
        run: |
          echo "Keeping Ollama + Cloudflared alive for 10 minutes..."
          sleep 600
